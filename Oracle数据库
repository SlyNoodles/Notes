oracle安装会自动的生成sys用户和system用户
（1）sys用户是超级用户，具有最高权限，具有sysdba角色，有create database 的权限
	默认密码是manager
（2）system用户是管理操作员，权限也很大，具有sysoper角色，没有create database权限
	默认密码是chang_on_install

（3）一般讲，对数据库维护，使用system用户登录就可以了

oracle是不区分大小写的，但是内容是区分大小写的（存储的数据区分大小写）

--------------------------------------------------------------------------------------------------
				命令

show user;		查看登录的user是哪个

conn system/manage;	切换登录

disc		断开连接

exit		断开连接并退出

edit		打开一个文件
edit d:\aa.sql	

spool		导出一个文件
		
clear	清屏

desc 表名		查看表结构


linesize		设置显示行的宽度,默认是80个字符
set linesize 90

pagesize		设置每页显示的行数目，默认是14
set pagesize 2

--------------------------------------------------------------------------------------------------
				用户的管理

create user 用户名 identified by 密码		创建一个用户 密码要字母开头

password 用户名			修改密码

drop user 用户名 [cascade]		删除用户
	注意：删除时，要删除的用户已经创建了表，那么就要带一个参数 cascade



-----系统权限（不级联回收）

select * from system_privilege_map  order by name;		显示全部系统权限

grant 系统权限[,系统权限] to 用户名 [with admin option]	给用户授系统权

revoke 系统权限 from 用户名		收回权限

系统权限：
connect	普通角色
dba	管理员角色
resource	建表角色


-----对象权限（级联回收）

grant 对象权限 on 对象 to 用户名 [with grant option]		给用户授对象权限

grant 对象权限 on map(列名) to 用户名 [with grant option]	控制用户只能对一列进行修改

revoke 对象权限 on 对象 from 用户名

对象权限：
select
insert
update
delete
all
create
index


-----角色

create role 角色名 not identified		创建角色不用验证

create role 角色名 identified by 密码		创建角色要验证

grant 系统权限[,系统权限] to 角色名 [with admin option]

grant 对象权限 on map to 角色名

grant 角色名 to 用户		给用户分配角色

drop role 角色名


select * from dba_rolse	显示所有角色

select privilege,admin_option from role_sys_privs where role='角色名'	
			显示角色具有的系统权限



--------------------------------------------------------------------------------------------------
				口令管理

create profile 名称 limit failed_login_attempts 密码输入次数 password_lock_time 锁定天数 
	定义profile


alter user 用户名 profile 名称			给一个用户加上口令管理

alter user 用户名 account unlock		给一个用户解锁

drop profile password_history [cascade]		删除profile



--------------------------------------------------------------------------------------------------
				数据类型

字符型： 
char		定长 最大2000字符

varchar2(20)	变长 最大4000字符

clob(character large objiect)		字符型大对象


数字型：
number		可以表示整数，也可以表示小数

number(5,2)
表示一个小数有5位有效数，2位小数

number(5)
表示一个5位整数


日期类型：
date 	包含年月日和时分秒


图片：
blob	二进制数据   可以存放图片/声音



--------------------------------------------------------------------------------------------------
				表的查询与管理

表名：
   表名以字母开头
   长度不能超过30字符
   不要使用oracle的保留字
   只能使用如下字符 A-Z，a-z，0-9，$，#等

-----表结构

alter table 表名 add (列名 数据类型)	添加一个字段

alter table 表名 modify (列名 数据类型)	修改一个字段的数据类型

alter table 表名 drop column 列名	删除列

alter table 表名 rename column 旧列名 to 新列名	修改列名

rename 旧表名 to 新表名		修改表名

drop table 表名			删除表


----删除数据

delete from 表名			删除数据，表结构还在，写日志，可以恢复
		
truncate table 表名			删除数据，表结构还在，不可以恢复

drop table 表名			删除表的结构和数据


------联合

union:	联合
select * from student 
union
select * from student2


union all:	联合
select * from student 
union all
select * from student2

使用union和union all都能进行联合，区别在于：使用union联合会去除重复，重新排列数据，而union all不会去除重复也不会重新排列


创建数据库使用工具


--------------------------------------------------------------------------------------------------	
				事物与锁

savepoint 昵称		设置保存点

rollback to 保存点昵称	取消部分事务

rollback			取消全部事务

commit			事物提交

set transaction read only	设置只读事物



--------------------------------------------------------------------------------------------------
				sql函数

-----字符函数

lower(char)		转成小写

upper(char)		转成大写

length(char)		返回字符串的长度

substr(char,m,n)		取字符串的子串   从m开始取，取n个字符

replace(char,a,b)		一个字符串中b替换a


-----数学函数

round(n,[m])	该函数执行四舍五入，如果省掉m则四舍五入到整数

trunc(n,[m])	不进行四舍五入

floor(n)		向下取整

ceil(n)		向上取整

mod(m,n)		取膜


-----日期函数

默认情况下日期格式是dd-mon-yy 即 12-7月-78

sysdate		返回当前系统时间

add_months(d,n)	d是日期类型，n是数字	返回当d加上n个月

last_day(d)	返回指定日期所在月份的最后一天


-----转换函数

to_char()

to_char(dd,'yyyy-mm-dd hh24:mi:ss')


-----系统函数

terminal		当前安装oracle的电脑昵称

language		当前使用的语言

db_name		当前数据库昵称

nls_date_format	当前的日期格式

session_user	当前登录的数据空用户名

current_schema

host		返回数据库所在的名称

select sys_context('userenv','db_name') from dual



--------------------------------------------------------------------------------------------------
			数据库的逻辑备份与恢复

show parameter;		显示参数

-----表的逻辑备份与恢复

特别说明：在导入和导出的时候，要到oracle的bin目录去导

导出自己的表
exp userid=用户/密码@数据库实例 tables=(表名,[表名]) file=d:\e1.dmp

导出其他用户的表
exp userid=用户/密码@数据库实例 tables=(用户名.表名,[用户名.表名]) file=d:\e1.dmp

导出表结构
exp userid=用户/密码@数据库实例 tables=(表名,[表名]) file=d:\e1.dmp rows=n

导出表结构	速度快很多
exp userid=用户/密码@数据库实例 tables=(表名,[表名]) file=d:\e1.dmp direct=y



导出方案
exp 用户/密码@数据库实例 owner=用户名 file=d:\e1.dmp

导出其他方案	system可以导出其他的方案,没法导出sys的方案
exp system/密码@数据库实例 owner=(用户名,[用户名]) file=d:\e1.dmp


导出数据库 必须要有dba的权限
exp userid=用户名/密码@myor full=y inctype=complete file=d:\\aaa.dmp



导入表
imp userid=用户/密码@数据库实例 tables=(表名) file=d:\xx.dmp

导入方案
imp userid=scott/tiger file=d:\xxx.dmp

导入其他方案
imp userid=用户名/密码 file=d:\xxx.dmp fromuser=system touser=scott

导入数据库
imp userid=system/manager full=y file=d:\xxx.dmp



--------------------------------------------------------------------------------------------------
				表空间

创建表空间
create tablespace data01 datafile 'd:\test\data01.dbf'
size 20m uniform size 128k


创建一个表指定表放在哪个表空间中
create table ii(i_no number(2),i_name varchar2(20)) tablespace 表空间名称


使表空间脱机
alter tablespace 表空间名 offline;

使表空间联机
alter tablespace 表空间名  online;

设置表空间只读
alter tablespace 表空间名 read only；

设置表空间可读可写
alter tablespace 表空间名 read write;

知道表空间名，要显示表空间包括的所以表
select * from all_tables where tablespace_name='表空间名'

知道表名，查看该表属于哪个表空间
select tablespace_name,table_name from user_tables where table_name='emp';

删除表空间
drop tablespace '表空间' including contents and datafiles;


--------------------------------------------------------------------------------------------------
				约束
---非空

not null		

alter table 表名 add modify 列名 not null	添加一个not null约束


---唯一

unique		

alter table 表名 add constraint 昵称 unique(列名)	添加一个唯一约束



---主键

primary key 	

alter table 表名 add constraint 昵称 primary key(列名)	添加一个主键


---外键

foreign key 	

references 外键表(列名)

alter table ii add constraint FK_name foreign key(id) references i(id)	添加一个外键


---检查

check 		

alter table 表名 add constraint 昵称 check(address in('安远','信丰'));
		添加一个检查约束



alter table 表名 drop constraint 约束名 [cascade]	删除约束



--------------------------------------------------------------------------------------------------
				索引


create index 索引昵称 on 表名(列名)		单列索引

create index 索引昵称 on 表名(列名,列名)		复合索引

drop index 索引名称 			删除索引



--------------------------------------------------------------------------------------------------
				pl/sql

学习必要性：
1.提高应用程序的运行性能

2.模块化的设计思想(分页的过程，订单的过程，转账的过程)

3.减少网络传输量

4.提高安全性


缺点：移植性不好



-----if
if 语句判断 then
elsif 语句判断 then
else
end if;


-----循环

loop循环：此循环至少循环一次
loop
end loop;


while循环：先判断再循环
while 判断语句 loop
end loop;

for循环：
for 变量名 in reverse 1..10 loop
end loop;


-----case
case
when 条件 then 要执行的语句;
when 条件 then 要执行的语句;
.....
else 要执行的语句;
end case;


-----null

null 什么都不干



-----块

begin
  dbms_output.put_line('hello world');
end;


-----存储过程

--创建简单的存储过程
create [or replace] procedure 存储过程名称[参数] is
begin
--执行部分
end;

in：表示这是一个输入参数，默认为in
out：表示这是一个输出参数


exec 过程名称			执行存储过程

call 存储过程			执行存储过程

drop procedure 存储过程名称		删除存储过程


java中调用存储过程

CallableStatement cs = co.prepareCall("{call cs_p1(?,?)}");



-----函数

函数的创建
create [or replace] functino 函数名称(参数) return 返回类型 is 要返回的参数
begin
执行内容
return 要返回的参数
end


函数的调用
var adc number;
call 函数名称(参数) into:abc


drop Function 函数昵称	删除函数



-----包

创建一个包
create package sp_package is
	procedure update_sal(name varhcar2,newsa1 number);
	function annual_income(name varchar2) return number;
end



建立包体
create [or replace] package body pack_p1 is
	procedure update_sal(name varhcar2,newsa1 number)
	is
	begin
		存储过程执行部分;
	end;

	function annual_income(name varchar2) return number
	is cou number;
	begin
		函数执行过程;
		return ;
	end;
end;



-----游标

创建游标的步骤
（1）定义一个游标类型
	declare type 游标类型名称 is ref cursor
（2）定义一个游标变量
	游标变量名 游标类型名称
（3）打开游标
	open 游标变量名 for select * from 
（4）取值
	fetch 游标名称 into 变量名
（5）关闭游标
	close 游标名称


创建一个游标
declare
--定义一个游标类型
type my1_cursor is ref cursor;
--定义一个游标变量
xb1_cursor my1_cursor;
--定义变量来接收
v_id i.iid%type;
v_name i.iname%type;
--一个块
begin
  --开始执行
  
  --打开游标
  open xb1_cursor for select iid,iname from i where sex='&aa';
  
  --循环
  loop
    
    fetch xb1_cursor into v_id,v_name;
    --判断游标是否为空
    exit when xb1_cursor%notfound;
    --输出
    dbms_output.put_line('id：'||v_id||' name:'||v_name);
    
  end loop;
  
  --关闭游标
  close xb1_cursor;
end;


-----例外

execption
when 例外 then 要执行的语句;
end;


-----视图

create [or replace] view 视图名称 as sql语句[with read only]	创建视图

drop view 视图名称			删除视图



-----触发器

create trigger 



编写规范：

（1）注释：
单行注释：--
多行注释/*........*/


（2）
定义变量时，建议用v_作为前缀		v_sal
定义常量时，建议用c_作为前缀		c_sal
定义游标时，建议用_cursor作为后缀	emp_cursor
定义例外时，建议用e_作为前缀		e_error


--------------------------------------------------------------------------------------------------
				oracle小知识

dual		oracle提供的默认表

nvl(a,0)		如果a为null，那么以0来显示，如果不为空以a来显示

to_date('1988-12-12','yyyy-mm-dd')	添加date类型时以我们习惯的格式来添加

create table new_map(id,nname) as select userid,username from map;		
		创建一个表复制一个表某些的信息

set serverout on		打开输出选项

show error		查看错误


